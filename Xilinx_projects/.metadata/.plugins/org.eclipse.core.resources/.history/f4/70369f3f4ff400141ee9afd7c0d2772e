/*
 * buttons.c
 *
 *  Created on: May 5, 2015
 *      Author: tcowley0
 */


#include "buttons.h"
#include <stdio.h>
#include <stdint.h>
#include "xparameters.h"			//has the addresses of the GPIO blocks
#include "supportFiles/display.h"	//to output to the screen

//this, quite simply, returns the value of the buttons. 0 for value, 4 for tri-state
uint32_t read_buttons_gpio_register(int32_t offset) {
	uint32_t *ptr = (uint32_t *) XPAR_GPIO_PUSH_BUTTONS_BASEADDR + offset;
	return *ptr;
}

//writes a value to buttons' base address + the offset. 4 to set tri_state
void write_buttons_register(int32_t offset, uint32_t value) {
	uint32_t *ptr = (uint32_t *) XPAR_GPIO_PUSH_BUTTONS_BASEADDR + offset;
	*ptr = value;
}

//get the buttons ready for reading.
int buttons_init() {
	write_buttons_register(TRI_STATE_OFFSET, TRI_STATE_READ); //inits the buttons TRI register for reading.

	if(read_buttons_gpio_register(XPAR_GPIO_PUSH_BUTTONS_BASEADDR + TRI_STATE_OFFSET) == TRI_STATE_READ) {
		return BUTTONS_INIT_STATUS_OK;
	} else {
		return BUTTONS_INIT_STATUS_FAIL;
	}

}

//returns the value of the buttons. Should this really be 32 bit?
int32_t buttons_read() {
	return read_buttons_gpio_register(0);
}


void buttons_runTest() {
	display_init();						//init.
	display_fillScreen(DISPLAY_BLACK);	//blank the screen.
	display_setTextColor(DISPLAY_CYAN);	//a good text color
	display_setTextSize(2);				//a good text size



	buttons_init();						//init
	uint32_t buttons_value = 0x0000;	//a good initial value
	uint32_t temp = 0x0000;				//another good initial value

	int finish = 0;
	while(!finish) {	//run until finished
		temp = buttons_read();			//read the buttons as fast as possible
//		printf("a");			//this needs to be here to work I DON"T KNOW WHY THOUGH
		if(temp != buttons_value) {		//we have recorded new button values!
			buttons_value = temp;		//update new current buttons value

			if(buttons_value & RAW_BUTTON_0)
				{disp_button(0,BUTTON_0);}	//button 0 pushed-> display
			else
				{disp_button(1,BUTTON_0);}	//button 0 NOT pushed-> blank


			if(buttons_value & RAW_BUTTON_1)
				{disp_button(0,BUTTON_1);}	//button 1 pushed-> display
			else
				{disp_button(1,BUTTON_1);}	//button 1 NOT pushed-> blank


			if(buttons_value & RAW_BUTTON_2)
				{disp_button(0,BUTTON_2);}	//button 2 pushed-> display
			else
				{disp_button(1,BUTTON_2);}	//button 1 NOT pushed-> blank


			if(buttons_value & RAW_BUTTON_3)
				{disp_button(0,BUTTON_3);}	//button 3 pushed-> display
			else
				{disp_button(1,BUTTON_3);}	//button 1 NOT pushed-> blank

			if(buttons_value == RAW_BUTTON_ALL) //ALL BUTTONS PUSHED
				{finish = 1;} //end
		}
	}
}


//this displays an arbitrary button on the screen
//blanks it if the button has disappeared
void disp_button(char blank, char button) {
	switch(button){
	case BUTTON_0:
		disp_button_0(blank);
		break;
	case BUTTON_1:
		disp_button_1(blank);
		break;
	case BUTTON_2:
		disp_button_2(blank);
		break;
	case BUTTON_3:
		disp_button_3(blank);
		break;
	}
}

//draws button 0
void disp_button_0(char blank) {
	printf("disp button 0 \n");
	int h = display_height();
	int w = display_width();

	if(blank){
		display_fillRect(w*3/QUARTER_WIDTH,  0,  w,  h/HALF_SCREEN, DISPLAY_BLACK);
	}else {
		display_fillRect(w*3/QUARTER_WIDTH,  0,  w,  h/HALF_SCREEN, DISPLAY_YELLOW);
		display_setCursor(w*3/QUARTER_WIDTH,   h/CURSOR_HEIGHT);
		display_setTextColor(DISPLAY_CYAN);
		display_println(" BTN0 ");
	}
}

//draws button 1
void disp_button_1(char blank) {
	printf("disp button 1 \n");
	int h = display_height();
	int w = display_width();

	if(blank){
		display_fillRect(w/HALF_SCREEN,  0,  w/QUARTER_WIDTH,  h/HALF_SCREEN, DISPLAY_BLACK);
	}else {
		display_fillRect(w/HALF_SCREEN,  0,  w/QUARTER_WIDTH,  h/HALF_SCREEN, DISPLAY_GREEN);
		display_setCursor(w/HALF_SCREEN,   h/CURSOR_HEIGHT);
		display_setTextColor(DISPLAY_CYAN);
		display_println(" BTN1 ");
	}
}

//draws button 2
void disp_button_2(char blank) {
	printf("disp button 2 \n");
	int h = display_height();
	int w = display_width();

	if(blank){
		display_fillRect(w/QUARTER_WIDTH,  0,  w/QUARTER_WIDTH,  h/HALF_SCREEN, DISPLAY_BLACK);
	}else {
		display_fillRect(w/QUARTER_WIDTH,  0,  w/QUARTER_WIDTH,  h/HALF_SCREEN, DISPLAY_RED);
		display_setCursor(w/QUARTER_WIDTH,   h/CURSOR_HEIGHT);
		display_setTextColor(DISPLAY_CYAN);
		display_println(" BTN2 ");
	}
}

//draws button 3
void disp_button_3(char blank) {
	printf("disp button 3 \n");
	int h = display_height();
	int w = display_width();

	if(blank){
		display_fillRect(0,  0,  w/QUARTER_WIDTH,  h/HALF_SCREEN, DISPLAY_BLACK);
	}else {
		display_fillRect(0,  0,  w/QUARTER_WIDTH,  h/HALF_SCREEN, DISPLAY_BLUE);
		display_setCursor(0,   h/CURSOR_HEIGHT);
		display_setTextColor(DISPLAY_CYAN);
		display_println(" BTN3 ");
	}
}
